name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build dependencies for type checking
        run: pnpm turbo ready

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm type-check

      - name: Build Chrome extension
        run: pnpm build

      - name: Run E2E tests
        run: pnpm e2e
        continue-on-error: true

  release-and-publish:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm exec semantic-release

      - name: Build and Package Chrome extension
        run: |
          pnpm build
          pnpm zip

      - name: Find zip file
        id: find-zip
        run: |
          ZIP_FILE=$(find dist-zip -name "extension-*.zip" -type f | head -1)
          echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_OUTPUT
          echo "Found zip file: $ZIP_FILE"

      - name: Publish to Chrome Web Store
        if: secrets.CHROME_EXTENSION_ID != ''
        env:
          EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
          CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
        run: |
          npx chrome-webstore-upload-cli upload \
            --source "${{ steps.find-zip.outputs.ZIP_FILE }}" \
            --extension-id $EXTENSION_ID